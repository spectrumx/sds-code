# Workflow to run pre-commit checks and tests against multiple Python versions
# GitHub Action Workflow validator: https://rhysd.github.io/actionlint/
name: sdk-checks

on:
    workflow_dispatch:
        # To manually trigger the workflow
        # https://docs.github.com/en/actions/writing-workflows/choosing-when-your-workflow-runs/events-that-trigger-workflows#workflow_dispatch
    push:
        paths:
            # https://docs.github.com/en/actions/writing-workflows/workflow-syntax-for-github-actions#filter-pattern-cheat-sheet
            - sdk/**
        branches:
            - main
            - master
    pull_request:
        paths:
            # https://docs.github.com/en/actions/writing-workflows/workflow-syntax-for-github-actions#filter-pattern-cheat-sheet
            - sdk/**
        branches:
            - main
            - master
        types:
            - ready_for_review

jobs:
    # Run pre-commit checks on all files using the project's python version
    pre-commit:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Install uv
              uses: astral-sh/setup-uv@v3
              # https://github.com/marketplace/actions/astral-sh-setup-uv

            - name: Install pre-commit
              working-directory: ./sdk
              run: uv tool install pre-commit

            - name: Cache pre-commit hooks
              id: cache-pre-commit
              uses: actions/cache@v4
              # https://github.com/actions/cache/blob/main/examples.md#python---pip
              with:
                  key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
                  path: ~/.cache/pre-commit/

            - name: Install hooks
              working-directory: ./sdk
              run: uv run pre-commit install --install-hooks

            - name: Run pre-commit
              working-directory: ./sdk
              # make sure default_language_version in .pre-commit-config.yaml
              # matches the one installed with uv, which is the most recent
              # stable python version that meets project requirements.
              run: uv run pre-commit run --all-files

    # Run static analysis with pyright
    #   - Install the pylance extension for VS Code to have these warnings in the editor
    pyright:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Install uv
              uses: astral-sh/setup-uv@v3

            - name: Install packages
              working-directory: ./sdk
              run: uv sync --frozen --dev

            - uses: jakebailey/pyright-action@v2
              # https://github.com/jakebailey/pyright-action#options
              with:
                  pylance-version: latest-release
                  working-directory: ./sdk
                  python-path: ./.venv/bin/python

    # Run tests against multiple Python versions
    coverage:
        runs-on: ${{ matrix.platform }}
        strategy:
            matrix:
                python-version: ["3.12", "3.13"]
                platform: [ubuntu-latest]

        steps:
            - uses: actions/checkout@v4

            - name: Install uv
              uses: astral-sh/setup-uv@v3
              # https://github.com/marketplace/actions/astral-sh-setup-uv

            - name: Set up Python ${{ matrix.python-version }}
              working-directory: ./sdk
              run: uv python install ${{ matrix.python-version }}

            - name: Run test
              working-directory: ./sdk
              # the uv command invoked by make will take care of project dependencies
              run: make test PYTHON_VERSION=${{ matrix.python-version }}
