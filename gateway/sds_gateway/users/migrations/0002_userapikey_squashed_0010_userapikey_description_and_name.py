# Generated by Django 4.2.14 on 2025-08-11 14:57

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import sds_gateway.api_methods.models
import secrets
import string
from django.contrib.auth.hashers import make_password


def create_svi_api_key_fixed(apps, schema_editor):
    User = apps.get_model('users', 'User')
    Token = apps.get_model('authtoken', 'Token')
    
    # create a new "SVI Server" user    
    user, created = User.objects.get_or_create(email=settings.SVI_SERVER_EMAIL)

    if created:
        password = ''.join(secrets.choice(string.ascii_letters + string.digits + string.punctuation) for _ in range(32))
        user.password = make_password(password)
        user.save()

    # Delete any existing tokens for this user
    Token.objects.filter(user=user).delete()

    # create a new authentication token for the SVI Server user
    Token.objects.create(user=user, key=settings.SVI_SERVER_API_KEY)

class Migration(migrations.Migration):

    replaces = [('users', '0002_userapikey'), ('users', '0003_user_is_approved'), ('users', '0004_alter_user_email'), ('users', '0005_userapikey_source'), ('users', '0006_auto_20250121_1012_fixed'), ('users', '0007_alter_userapikey_source'), ('users', '0008_alter_user_is_approved'), ('users', '0009_alter_user_is_approved'), ('users', '0010_userapikey_description_and_name')]

    dependencies = [
        ('users', '0001_initial'),
        ('authtoken', '0003_tokenproxy'),
    ]

    operations = [
        migrations.AddField(
            model_name='user',
            name='is_approved',
            field=models.BooleanField(default=False, help_text='Designates whether this user has been approved to use the API by an Admin.', verbose_name='Approved'),
        ),
        migrations.AlterField(
            model_name='user',
            name='email',
            field=models.EmailField(max_length=254, unique=True, verbose_name='Email address'),
        ),
        migrations.CreateModel(
            name='UserAPIKey',
            fields=[
                ('id', models.CharField(editable=False, max_length=150, primary_key=True, serialize=False, unique=True)),
                ('prefix', models.CharField(editable=False, max_length=8, unique=True)),
                ('hashed_key', models.CharField(editable=False, max_length=150)),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('name', models.CharField(default=None, help_text='A free-form name for the API key. Need not be unique. 50 characters max.', max_length=50)),
                ('revoked', models.BooleanField(blank=True, default=False, help_text='If the API key is revoked, clients cannot use it anymore. (This cannot be undone.)')),
                ('expiry_date', models.DateTimeField(blank=True, help_text='Once API key expires, clients cannot use it anymore.', null=True, verbose_name='Expires')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('source', models.CharField(choices=[('sds_web_ui', 'SDS Web UI'), ('sds_api', 'SDS API'), ('svi_backend', 'SVI Backend')], default='sds_web_ui', max_length=255)),
            ],
            options={
                'verbose_name': 'API key',
                'verbose_name_plural': 'API keys',
                'ordering': ('-created',),
                'abstract': False,
            },
        ),
        migrations.RunPython(
            code=create_svi_api_key_fixed,
        ),
        migrations.AlterField(
            model_name='userapikey',
            name='source',
            field=models.CharField(choices=[(sds_gateway.api_methods.models.KeySources['SDSWebUI'], 'SDS Web UI'), (sds_gateway.api_methods.models.KeySources['SVIBackend'], 'SVI Backend'), (sds_gateway.api_methods.models.KeySources['SVIWebUI'], 'SVI Web UI')], default=sds_gateway.api_methods.models.KeySources['SDSWebUI'], max_length=255),
        ),
        migrations.AlterField(
            model_name='user',
            name='is_approved',
            field=models.BooleanField(default=True, help_text='Designates whether this user has been approved to use the API by an Admin.', verbose_name='Approved'),
        ),
        migrations.AlterField(
            model_name='user',
            name='is_approved',
            field=models.BooleanField(default=False, help_text='Designates whether this user has been approved to use the API by an Admin.', verbose_name='Approved'),
        ),
        migrations.AddField(
            model_name='userapikey',
            name='description',
            field=models.TextField(blank=True, default='', help_text='Optional description for this API key.'),
        ),
        migrations.AlterField(
            model_name='userapikey',
            name='name',
            field=models.CharField(blank=True, default='', max_length=255),
        ),
    ]
