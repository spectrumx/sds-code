# Generated by Django 4.2.25 on 2025-10-27 20:01

from django.db import migrations, models
import django.db.models.deletion
import json


def copy_text_to_json(apps, schema_editor):
    """Copy existing text data to JSON field format."""
    PostProcessedData = apps.get_model('visualizations', 'PostProcessedData')

    for obj in PostProcessedData.objects.all():
        if obj.processing_error:
            # Handle empty strings - convert to None
            if isinstance(obj.processing_error, str) and not obj.processing_error.strip():
                obj.processing_error_temp = None
                obj.save(update_fields=['processing_error_temp'])
                continue

            try:
                # Try to parse as JSON first
                parsed = json.loads(obj.processing_error)
                # If it parses, use the parsed JSON
                obj.processing_error_temp = parsed
            except (json.JSONDecodeError, ValueError):
                # It's not JSON, convert it to JSON format
                obj.processing_error_temp = {
                    "traceback": obj.processing_error,
                }
            obj.save(update_fields=['processing_error_temp'])


def reverse_copy(apps, schema_editor):
    """Reverse: Copy from JSON back to text format."""
    PostProcessedData = apps.get_model('visualizations', 'PostProcessedData')

    for obj in PostProcessedData.objects.all():
        if obj.processing_error_temp:
            if isinstance(obj.processing_error_temp, dict):
                traceback = obj.processing_error_temp.get('traceback') or str(obj.processing_error_temp)
                obj.processing_error = traceback
            else:
                obj.processing_error = str(obj.processing_error_temp)
            obj.save(update_fields=['processing_error'])


class Migration(migrations.Migration):

    dependencies = [
        ('django_cog', '0002_pipelinerun_arguments_as_json'),
        ('visualizations', '0002_alter_postprocesseddata_unique_together'),
    ]

    operations = [
        # Step 1: Create a new JSONField to hold the converted data
        migrations.AddField(
            model_name='postprocesseddata',
            name='processing_error_temp',
            field=models.JSONField(blank=True, help_text='Error information if processing failed', null=True),
        ),

        # Step 2: Copy text data from processing_error to processing_error_temp, converting to JSON
        migrations.RunPython(copy_text_to_json, reverse_copy),

        # Step 3: Delete the old processing_error field
        migrations.RemoveField(
            model_name='postprocesseddata',
            name='processing_error',
        ),

        # Step 4: Rename processing_error_temp to processing_error
        migrations.RenameField(
            model_name='postprocesseddata',
            old_name='processing_error_temp',
            new_name='processing_error',
        ),

        # Step 5: Add the cog_error field
        migrations.AddField(
            model_name='postprocesseddata',
            name='cog_error',
            field=models.ForeignKey(blank=True, help_text='Django COG error record, if available', null=True, on_delete=django.db.models.deletion.SET_NULL, to='django_cog.cogerror'),
        ),
    ]
