volumes:
    sds_gateway_local_postgres_data: {}
    sds_gateway_local_postgres_data_backups: {}
    sds_gateway_local_redis_data: {}
    minio_files: {}
    opensearch_data: {}

networks:
    sds-gateway-minio-local-net:
    sds-gateway-opensearch-local-net:

services:
    django: &django
        build:
            context: .
            dockerfile: ./compose/local/django/Dockerfile
        image: sds_gateway_local_django
        container_name: sds_gateway_local_django
        depends_on:
            - postgres
            - redis
            - minio
        volumes:
            - .:/app:z
        env_file:
            - ./.envs/local/django.env
            - ./.envs/local/minio.env
            - ./.envs/local/postgres.env
            - ./.envs/local/opensearch.env
        ports:
            - "8000:8000"
        command: /start
        networks:
            - sds-gateway-minio-local-net
            - sds-gateway-opensearch-local-net

    minio:
        # minio uses rolling upgrades that are non-disruptive, so we can target latest
        # For more information on how to upgrade MinIO deployment, refer to the MinIO documentation:
        # https://min.io/docs/minio/container/operations/install-deploy-manage/upgrade-minio-deployment.html
        image: minio/minio:latest
        container_name: sds_gateway_local_minio
        volumes:
            - minio_files:/files
        ports:
            - "9000:9000"
            - "9001:9001"
        env_file:
            - ./.envs/local/minio.env
        command: server /files --console-address ":9001"
        networks:
            - sds-gateway-minio-local-net

    opensearch:
        # opensearch upgrades follow semver - let's target a major version
        # https://opensearch.org/docs/latest/install-and-configure/upgrade-opensearch/index/
        # release notes
        # https://opensearch.org/docs/latest/version-history/
        image: opensearchproject/opensearch:2
        container_name: sds_gateway_local_opensearch
        volumes:
            - opensearch_data:/usr/share/opensearch/data
            - ./opensearch.local.yaml:/usr/share/opensearch/config/opensearch.yml
        env_file:
            - ./.envs/local/opensearch.env
        ulimits:
            memlock:
                soft: -1
                hard: -1
        ports:
            - "9200:9200"
            - "9600:9600"
        networks:
            - sds-gateway-opensearch-local-net

    postgres:
        build:
            context: .
            dockerfile: ./compose/production/postgres/Dockerfile
        image: sds_gateway_production_postgres
        container_name: sds_gateway_local_postgres
        volumes:
            - sds_gateway_local_postgres_data:/var/lib/postgresql/data
            - sds_gateway_local_postgres_data_backups:/backups
        env_file:
            - ./.envs/local/postgres.env
        networks:
            - sds-gateway-minio-local-net

    redis:
        image: docker.io/redis:6
        container_name: sds_gateway_local_redis
        volumes:
            - sds_gateway_local_redis_data:/data

    celeryworker:
        <<: *django
        image: sds_gateway_local_celeryworker
        container_name: sds_gateway_local_celeryworker
        depends_on:
            - redis
            - postgres
        ports: []
        command: /start-celeryworker

    celerybeat:
        <<: *django
        image: sds_gateway_local_celerybeat
        container_name: sds_gateway_local_celerybeat
        depends_on:
            - redis
            - postgres
        ports: []
        command: /start-celerybeat

    flower:
        <<: *django
        image: sds_gateway_local_flower
        container_name: sds_gateway_local_flower
        ports:
            - "5555:5555"
        command: /start-flower

    node:
        build:
            context: .
            dockerfile: ./compose/local/node/Dockerfile
        image: sds_gateway_local_node
        container_name: sds_gateway_local_node
        depends_on:
            - django
        volumes:
            - .:/app:z
            # http://jdlm.info/articles/2016/03/06/lessons-building-node-app-docker.html
            - /app/node_modules
        command: npm run dev
        ports:
            - "3000:3000"
