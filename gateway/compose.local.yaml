# LOCAL COMPOSE FILE
# Make sure images, container names, and other assets start with "sds-gateway-local-"
#   to underline its importance and avoid accidents.
# Also try to keep it as close to the production
#   file as possible to simplify the deployment process.

volumes:
    # for safety, all local volumes start with "sds-gateway-local-"
    sds-gateway-local-app-media: {}  # for Django media files
    sds-gateway-local-temp-zips: {}  # for temporary zip files
    sds-gateway-local-minio-files: {}
    sds-gateway-local-opensearch-data: {}
    sds-gateway-local-postgres-data-backups: {}
    sds-gateway-local-postgres-data: {}
    sds-gateway-local-redis-data: {}

networks:
    # for safety, all gateway local networks start with "sds-gateway-local-"
    sds-gateway-local-minio-net:
        driver: bridge
    sds-gateway-local-opensearch-net:
        driver: bridge
    sds-network-local:
        # external: true  # make it external if running with traefik on this machine
        driver: bridge
services:

    sds-gateway-local-app:
        build:
            context: .
            dockerfile: ./compose/local/django/Dockerfile
        image: sds-gateway-local-app
        container_name: sds-gateway-local-app
        tty: true
        depends_on:
            opensearch:
                condition: service_healthy
            postgres:
                condition: service_started
            redis:
                condition: service_started
            minio:
                condition: service_started
        volumes:
            - .:/app:z  # bind mount used in local for hot reloading; prod uses built assets
            - sds-gateway-local-app-media:/app/sds_gateway/media  # persistent media storage
            - sds-gateway-local-temp-zips:/app/sds_gateway/media/temp_zips  # temporary zip files
            # - ./staticfiles/:/app/staticfiles/:z  # used in prod only
        env_file:
            - ./.envs/local/django.env
            - ./.envs/local/minio.env
            - ./.envs/local/postgres.env
            - ./.envs/local/opensearch.env
        ports:
            - "8000:8000" # make sure this port matches traefik's config, if used
        command: /start
        networks:
            - sds-gateway-local-minio-net
            - sds-gateway-local-opensearch-net
            - sds-network-local

    nginx:
        # nginx serves the static files generated for the gateway
        image: docker.io/nginx:1-alpine
        container_name: sds-gateway-local-nginx
        volumes:
            - source : ./compose/production/nginx/nginx-default.conf
              target: /etc/nginx/conf.d/default.conf
              type: bind
              read_only: true
            # e.g. curl --insecure https://sds.crc.nd.edu/static/css/project.css
            # this location is only used in local; prod uses 'staticfiles/'
            - source: ./sds_gateway/static/
              target: /usr/share/nginx/static
              type: bind
              read_only: true
        networks:
            - sds-network-local

    minio:
        # main file storage for sds
        # minio uses rolling upgrades that are non-disruptive, so we can target latest
        # For more information on how to upgrade MinIO deployment, refer to the MinIO documentation:
        # https://min.io/docs/minio/container/operations/install-deploy-manage/upgrade-minio-deployment.html
        image: minio/minio:latest
        container_name: sds-gateway-local-minio
        volumes:
            - sds-gateway-local-minio-files:/files
        ports:
            - "9000:9000"
            - "9001:9001"
        env_file:
            - ./.envs/local/minio.env
        command: server /files --console-address ":9001"
        networks:
            - sds-gateway-local-minio-net

    opensearch:
        # used for indexing and searching documents
        build:
            context: .
            dockerfile: ./compose/local/opensearch/Dockerfile
            args:
                UID: ${UID}
                GID: ${GID}
        container_name: sds-gateway-local-opensearch
        volumes:
            - sds-gateway-local-opensearch-data:/usr/share/opensearch/data
            - ./compose/local/opensearch/opensearch.yaml:/usr/share/opensearch/config/opensearch.yml
        env_file:
            - ./.envs/local/opensearch.env
        ulimits:
            memlock:
                soft: -1
                hard: -1
        ports:
            - "9200:9200"
            - "9600:9600"
        networks:
            - sds-gateway-local-opensearch-net
        healthcheck:
            test: ["CMD-SHELL", "curl -u ${OPENSEARCH_USER}:${OPENSEARCH_PASSWORD} http://localhost:9200/_cluster/health?pretty | grep -q '\"status\" : \"green\"\\|\"status\" : \"yellow\"'"]
            interval: 30s
            timeout: 10s
            retries: 3

    postgres:
        # main database for the gateway app
        build:
            context: .
            dockerfile: ./compose/production/postgres/Dockerfile
            # this dockerfile is used for both local and prod
        image: sds-gateway-local-postgres
        container_name: sds-gateway-local-postgres
        volumes:
            - sds-gateway-local-postgres-data:/var/lib/postgresql/data
            - sds-gateway-local-postgres-data-backups:/backups
        env_file:
            - ./.envs/local/postgres.env
        networks:
            - sds-gateway-local-minio-net

    redis:
        # used as caching layer for the gateway app
        image: docker.io/redis:6
        container_name: sds-gateway-local-redis
        volumes:
            - sds-gateway-local-redis-data:/data
        networks:
            - sds-network-local

    # ==========================
    # Celery services for background tasks
    celery-worker:
        build:
            context: .
            dockerfile: ./compose/local/django/Dockerfile
        image: sds-gateway-local-app
        container_name: sds-gateway-local-celery-worker
        depends_on:
            redis:
                condition: service_started
            postgres:
                condition: service_started
            minio:
                condition: service_started
        volumes:
            - .:/app:z
            - sds-gateway-local-app-media:/app/sds_gateway/media  # persistent media storage
            - sds-gateway-local-temp-zips:/app/sds_gateway/media/temp_zips  # temporary zip files
        env_file:
            - ./.envs/local/django.env
            - ./.envs/local/minio.env
            - ./.envs/local/postgres.env
            - ./.envs/local/opensearch.env
        command: celery -A config.celery_app worker -l INFO
        networks:
            - sds-gateway-local-minio-net
            - sds-gateway-local-opensearch-net
            - sds-network-local

    celery-beat:
        # Celery Beat scheduler for periodic tasks
        build:
            context: .
            dockerfile: ./compose/local/django/Dockerfile
        image: sds-gateway-local-app
        container_name: sds-gateway-local-celery-beat
        depends_on:
            redis:
                condition: service_started
            postgres:
                condition: service_started
            minio:
                condition: service_started
        volumes:
            - .:/app:z
            - sds-gateway-local-app-media:/app/sds_gateway/media  # persistent media storage
            - sds-gateway-local-temp-zips:/app/sds_gateway/media/temp_zips  # temporary zip files
        env_file:
            - ./.envs/local/django.env
            - ./.envs/local/minio.env
            - ./.envs/local/postgres.env
            - ./.envs/local/opensearch.env
        command: celery -A config.celery_app beat -l INFO
        networks:
            - sds-gateway-local-minio-net
            - sds-gateway-local-opensearch-net
            - sds-network-local

    celery-flower:
        # Celery monitoring and administration tool
        build:
            context: .
            dockerfile: ./compose/local/django/Dockerfile
        image: sds-gateway-local-app
        container_name: sds-gateway-local-celery-flower
        depends_on:
            redis:
                condition: service_started
            postgres:
                condition: service_started
            minio:
                condition: service_started
            opensearch:
                condition: service_started
        volumes:
            - .:/app:z
            - sds-gateway-local-app-media:/app/sds_gateway/media  # persistent media storage
            - sds-gateway-local-temp-zips:/app/sds_gateway/media/temp_zips  # temporary zip files
        env_file:
            - ./.envs/local/django.env
            - ./.envs/local/minio.env
            - ./.envs/local/postgres.env
            - ./.envs/local/opensearch.env
        command: /start
        ports:
            - "5555:5555"  # Flower web interface
        networks:
            - sds-gateway-local-minio-net
            - sds-gateway-local-opensearch-net
            - sds-network-local

    # ==========================
    # local development services
    node:
        # used for frontend development and hot reloading
        build:
            context: .
            dockerfile: ./compose/local/node/Dockerfile
        image: sds-gateway-local-node
        container_name: sds-gateway-local-node
        depends_on:
            - sds-gateway-local-app
        volumes:
            - .:/app:z
            # http://jdlm.info/articles/2016/03/06/lessons-building-node-app-docker.html
            - /app/node_modules
        command: npm run dev
        ports:
            - "3000:3000"

    mailhog:
        # email testing service for local development
        image: mailhog/mailhog:latest
        container_name: sds-gateway-local-mailhog
        ports:
            - "1025:1025"  # SMTP server
            - "8025:8025"  # Web UI
        networks:
            - sds-network-local
