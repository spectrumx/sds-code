[project]
    authors = [{ name = "Center for Research Computing | UND", email = "crcsupport@nd.edu" }]
    dependencies = [
        "argon2-cffi>=23.1.0",
        "celery>=5.4.0",
        "crispy-bootstrap5>=2024.2",
        "django-allauth>=64.2.1",
        "django-celery-beat>=2.7.0",
        "django-cors-headers>=4.4.0",
        "django-crispy-forms>=2.3",
        "django-environ>=0.11.2",
        "django-model-utils>=5.0.0",
        "django-redis>=5.4.0",
        "django-webpack-loader>=3.1.1",
        "django>=4.2,<5",
        "djangorestframework>=3.15.2",
        "drf-spectacular>=0.27.2",
        "flower>=2.0.1",
        "hiredis>=3.0.0",
        "pillow>=10.4.0",
        "python-slugify>=8.0.4",
        "redis>=5.0.8",
        "uvicorn>=0.30.6",
        "uvicorn-worker>=0.2.0",
        "whitenoise>=6.7.0",
    ]
    description = "Gateway for SpectrumX Data System"
    name = "sds_gateway"
    requires-python = ">=3.12"
    version = "0.1.0"

    [project.optional-dependencies]
        local = [
            "coverage>=7.6.1",
            "django-stubs[compatible-mypy]>=5.0.4",
            "djangorestframework-stubs[compatible-mypy]>=3.15.1",
            "djlint>=1.35.2",
            "ipdb>=0.13.13",
            "mypy>=1.11.2",
            "pre-commit>=3.8.0",
            "psycopg[c]>=3.2.2",
            "pytest>=8.3.3",
            "pytest-sugar>=1.0.0",
            "ruff>=0.6.6",
            "sphinx>=8.0.2",
            "sphinx-autobuild>=2024.9.19",
            "watchfiles>=0.24.0",
            "werkzeug[watchdog]>=3.0.4",
            "factory-boy>=3.3.1",
            "django-debug-toolbar>=4.4.6",
            "django-extensions>=3.2.3",
            "django-coverage-plugin>=3.1.0",
            "pytest-django>=4.9.0",
        ]
        production = ["django-anymail[mailgun]>=12.0", "gunicorn>=23.0.0", "psycopg[c]>=3.2.2"]

# ==== pytest ====
[tool.pytest.ini_options]
    addopts      = "--ds=config.settings.test --reuse-db --import-mode=importlib"
    minversion   = "6.0"
    python_files = ["tests.py", "test_*.py"]

# ==== Coverage ====
[tool.coverage.run]
    include = ["sds_gateway/**"]
    omit    = ["*/migrations/*", "*/tests/*"]
    plugins = ["django_coverage_plugin"]

# ==== mypy ====
[tool.mypy]
    check_untyped_defs     = true
    ignore_missing_imports = true
    plugins                = ["mypy_django_plugin.main", "mypy_drf_plugin.main"]
    python_version         = "3.12"
    warn_redundant_casts   = true
    warn_unused_configs    = true
    warn_unused_ignores    = true

    [[tool.mypy.overrides]]
        # Django migrations should not produce any errors:
        ignore_errors = true
        module        = "*.migrations.*"

[tool.django-stubs]
    django_settings_module = "config.settings.test"

# ==== djLint ====
[tool.djlint]
    blank_line_after_tag = "load,extends"
    close_void_tags      = true
    format_css           = true
    format_js            = true
    # TODO: remove T002 when fixed https://github.com/djlint/djLint/issues/687
    ignore          = "H006,H030,H031,T002"
    include         = "H017,H035"
    indent          = 4
    max_line_length = 119
    profile         = "django"

    [tool.djlint.css]
        indent_size = 4

    [tool.djlint.js]
        indent_size = 4

[tool.ruff]
    # Exclude a variety of commonly ignored directories.
    exclude = [
        ".bzr",
        ".direnv",
        ".eggs",
        ".git",
        ".git-rewrite",
        ".hg",
        ".mypy_cache",
        ".nox",
        ".pants.d",
        ".pytype",
        ".ruff_cache",
        ".svn",
        ".tox",
        ".venv",
        "__pypackages__",
        "_build",
        "buck-out",
        "build",
        "dist",
        "node_modules",
        "venv",
        "*/migrations/*.py",
        "staticfiles/*",
    ]
    # Same as Django: https://github.com/cookiecutter/cookiecutter-django/issues/4792.
    indent-width   = 4
    line-length    = 88
    target-version = "py312"

    [tool.ruff.lint]
        ignore = [
            "S101",   # Use of assert detected https://docs.astral.sh/ruff/rules/assert/
            "S104",   # Possible binding to all interfaces
            "RUF012", # Mutable class attributes should be annotated with `typing.ClassVar`
            "SIM102", # sometimes it's better to nest
            "UP038",  # Checks for uses of isinstance/issubclass that take a tuple
            # of types for comparison.
            # Deactivated because it can make the code slow:
            # https://github.com/astral-sh/ruff/issues/7871
        ]
        select = [
            "F",
            "E",
            "W",
            "C90",
            "I",
            "N",
            "UP",
            "YTT",
            # "ANN", # flake8-annotations: we should support this in the future but 100+ errors atm
            "ASYNC",
            "S",
            "BLE",
            "FBT",
            "B",
            "A",
            "COM",
            "C4",
            "DTZ",
            "T10",
            "DJ",
            "EM",
            "EXE",
            "FA",
            'ISC',
            "ICN",
            "G",
            'INP',
            'PIE',
            "T20",
            'PYI',
            'PT',
            "Q",
            "RSE",
            "RET",
            "SLF",
            "SLOT",
            "SIM",
            "TID",
            "TCH",
            "INT",
            # "ARG", # Unused function argument
            "PTH",
            "ERA",
            "PD",
            "PGH",
            "PL",
            "TRY",
            "FLY",
            # "NPY",
            # "AIR",
            "PERF",
            # "FURB",
            # "LOG",
            "RUF",
        ]
        # Allow fix for all enabled rules (when `--fix`) is provided.
        fixable   = ["ALL"]
        unfixable = []
        # The fixes in extend-unsafe-fixes will require
        # provide the `--unsafe-fixes` flag when fixing.
        extend-unsafe-fixes = ["UP038"]
        # Allow unused variables when underscore-prefixed.
        dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

    [tool.ruff.format]
        indent-style              = "space"
        line-ending               = "auto"
        quote-style               = "double"
        skip-magic-trailing-comma = false

    [tool.ruff.lint.isort]
        force-single-line = true
