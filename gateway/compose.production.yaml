volumes:
    production_postgres_data: {}
    production_postgres_data_backups: {}
    production_django_media: {}
    production_redis_data: {}
    minio_files: {}
    opensearch_data: {}

networks:
    sds-gateway-minio-prod-net:
        driver: bridge
    sds-gateway-opensearch-prod-net:
        driver: bridge

services:
    django: &django
        build:
            context: .
            dockerfile: ./compose/production/django/Dockerfile

        image: sds_gateway_production_django
        tty: true
        volumes:
            - production_django_media:/app/sds_gateway/media
        depends_on:
            - postgres
            - redis
            - minio
        env_file:
            - ./.envs/production/django.env
            - ./.envs/production/minio.env
            - ./.envs/production/postgres.env
            - ./.envs/production/opensearch.env
        command: /start
        networks:
            - sds-gateway-opensearch-prod-net
            - sds-gateway-minio-prod-net

    minio:
        # minio uses rolling upgrades that are non-disruptive, so we can target latest
        # For more information on how to upgrade MinIO deployment, refer to the MinIO documentation:
        # https://min.io/docs/minio/container/operations/install-deploy-manage/upgrade-minio-deployment.html
        image: minio/minio:latest
        container_name: sds_gateway_production_minio
        volumes:
            - minio_files:/files
        ports:
            - "9000:9000"
            - "9001:9001"
        env_file:
            - ./.envs/production/minio.env
        command: server /files --console-address ":9001"
        networks:
            - sds-gateway-minio-prod-net

    opensearch:
        # opensearch upgrades follow semver - let's target a major version
        # https://opensearch.org/docs/latest/install-and-configure/upgrade-opensearch/index/
        # release notes
        # https://opensearch.org/docs/latest/version-history/
        image: opensearchproject/opensearch:2
        container_name: sds_gateway_production_opensearch
        volumes:
            - opensearch_data:/usr/share/opensearch/data
            - ./opensearch.production.yaml:/usr/share/opensearch/config/opensearch.yml
            - ./opensearch/data/certs:/usr/share/opensearch/config/certs
        env_file:
            - ./.envs/production/opensearch.env
        ulimits:
            memlock:
                soft: -1
                hard: -1
        ports:
            - "9200:9200"
            - "9600:9600"
        networks:
            - sds-gateway-opensearch-prod-net

    postgres:
        build:
            context: .
            dockerfile: ./compose/production/postgres/Dockerfile
        image: sds_gateway_production_postgres
        volumes:
            - production_postgres_data:/var/lib/postgresql/data
            - production_postgres_data_backups:/backups
        env_file:
            - ./.envs/production/postgres.env
        networks:
            - sds-gateway-minio-prod-net

    redis:
        image: docker.io/redis:6

        volumes:
            - production_redis_data:/data

    celeryworker:
        <<: *django
        image: sds_gateway_production_celeryworker
        command: /start-celeryworker

    celerybeat:
        <<: *django
        image: sds_gateway_production_celerybeat
        command: /start-celerybeat

    flower:
        <<: *django
        image: sds_gateway_production_flower
        command: /start-flower
