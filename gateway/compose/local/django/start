#!/bin/bash

set -euo pipefail

APP_DIR="/app"

# logs a message and waits for manual input before exiting and terminating the container
function echo_wait_and_quit() {
    local message="$1"
    echo >&2 "$message"

    # this wait may be useful for manually running manage.py or
    # other shell commands in the container in case of failure:
    echo -e >&2 "\033[0;31mGiving time for manual input before exiting...\033[0m"
    sleep 3600

    exit 1
}

function main() {

    pushd "${APP_DIR}" || {
        echo_wait_and_quit "Failed to change directory to ${APP_DIR}."
    }

    echo "Applying database migrations..."
    uv run manage.py migrate --noinput || {
        echo_wait_and_quit "Failed to apply database migrations."
    }

    echo "Initializing OpenSearch indices..."
    uv run manage.py init_indices || {
        echo_wait_and_quit "Failed to initialize OpenSearch indices."
    }

    echo "Initializing SVI server token..."
    uv run manage.py init_svi_token || {
        echo_wait_and_quit "Failed to initialize SVI server token."
    }

    echo "Setting up django-cog pipelines..."
    uv run manage.py setup_pipelines --strategy=smart-recreate || {
        echo_wait_and_quit "Failed to set up django-cog pipelines."
    }

    echo "Starting Uvicorn server..."
    exec uv run uvicorn config.asgi:application \
        --host 0.0.0.0 \
        --reload \
        --reload-include '*.html' || {
            echo_wait_and_quit "Uvicorn server failed."
        }

}

main "$@" || {
    echo >&2 "An error occurred while starting the Django application."
    exit 1
}
