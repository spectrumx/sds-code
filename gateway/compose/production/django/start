#!/bin/bash

set -euo pipefail

APP_DIR="/app"

# logs a message and waits for manual input before exiting and terminating the container
function echo_wait_and_quit() {
    local message="$1"
    echo >&2 "$message"
    echo >&2 "Waiting for manual input before exiting..."
    sleep 3600
    exit 1
}

function main() {

    pushd "${APP_DIR}" || {
        echo_wait_and_quit "Failed to change directory to ${APP_DIR}."
    }

    echo "Collecting static files..."
    python manage.py collectstatic --noinput

    echo "Applying database migrations..."
    python manage.py migrate --noinput || {
        echo_wait_and_quit "Failed to apply database migrations."
    }

    echo "Initializing OpenSearch indices..."
    python manage.py init_indices || {
        echo_wait_and_quit "Failed to initialize OpenSearch indices."
    }

    echo "Initializing SVI server token..."
    python manage.py init_svi_token || {
        echo_wait_and_quit "Failed to initialize SVI server token."
    }

    echo "Setting up django-cog pipelines..."
    python manage.py setup_pipelines --force || {
        echo_wait_and_quit "Failed to set up django-cog pipelines."
    }

    echo "Starting Gunicorn server..."
    exec /usr/local/bin/gunicorn config.asgi \
        --bind 0.0.0.0:18000 \
        --chdir=/app -k uvicorn_worker.UvicornWorker

}

main "$@" || {
    echo >&2 "An error occurred while starting the Django application."
    exit 1
}
